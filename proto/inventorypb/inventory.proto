syntax = "proto3";

package inventorypb;

option go_package = "shortLink/proto/inventorypb";

// 库存服务接口定义
service InventoryService {
  // 获取产品库存信息
  rpc GetProductInventory(GetProductInventoryRequest) returns (GetProductInventoryResponse) {}
  // 锁定库存
  rpc LockInventory(LockInventoryRequest) returns (LockInventoryResponse) {}
  // 释放库存
  rpc ReleaseInventory(ReleaseInventoryRequest) returns (ReleaseInventoryResponse) {}
  // 确认库存扣减
  rpc ConfirmInventory(ConfirmInventoryRequest) returns (ConfirmInventoryResponse) {}
}

// 获取产品库存请求
message GetProductInventoryRequest {
  string product_id = 1;    // 产品ID
}

// 获取产品库存响应
message GetProductInventoryResponse {
  string product_id = 1;    // 产品ID
  int32 total_stock = 2;    // 总库存
  int32 available = 3;      // 可用库存
  int32 reserved = 4;       // 已预留库存
}

// 锁定库存请求
message LockInventoryRequest {
  string product_id = 1;    // 产品ID
  string order_id = 2;      // 订单ID
  int32 quantity = 3;       // 锁定数量
  int64 expire_seconds = 4; // 锁定过期时间（秒）
}

// 锁定库存响应
message LockInventoryResponse {
  string lock_id = 1;       // 锁定ID
  bool success = 2;         // 是否成功
  string expire_time = 3;   // 过期时间
  string message = 4;       // 消息
}

// 释放库存请求
message ReleaseInventoryRequest {
  string lock_id = 1;       // 锁定ID
}

// 释放库存响应
message ReleaseInventoryResponse {
  bool success = 1;         // 是否成功
  string message = 2;       // 消息
}

// 确认库存扣减请求
message ConfirmInventoryRequest {
  string lock_id = 1;       // 锁定ID
}

// 确认库存扣减响应
message ConfirmInventoryResponse {
  bool success = 1;         // 是否成功
  string message = 2;       // 消息
}