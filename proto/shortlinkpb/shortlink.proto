syntax = "proto3";

package shortlink;

option go_package = "./proto/shortlinkpb";

// 请求生成短链接
message ShortenRequest {
  string original_url = 1;
  string user_id = 2;
}

message ShortenResponse {
  string short_url = 1;
}

// 请求解析短链接
message ResolveRequest {
  string short_url = 1;
}

message ResolveResponse {
  string original_url = 1;
}

message TopRequest {
  int64 count = 1;
}

message ShortLinkItem {
  string short_url = 1;
  double clicks = 2;
}

message TopResponse {
  repeated ShortLinkItem top = 1;
}

// 批量生成短链接的请求
message BatchShortenRequest {
  // 需要转换的原始长URL列表
  repeated string original_urls = 1;
  string user_id = 2;
  // 并发处理的数量，默认为10
  int32 concurrency = 3;
}

// 批量生成短链接的单个结果
message BatchShortenResult {
  // 原始URL
  string original_url = 1;
  // 生成的短URL
  string short_url = 2;
  // 错误信息，如果有的话
  string error = 3;
}

// 批量生成短链接的响应
message BatchShortenResponse {
  // 批量生成结果列表
  repeated BatchShortenResult results = 1;
  // 总请求数量
  int32 total_count = 2;
  // 成功生成的数量
  int32 success_count = 3;
  // 处理耗时
  string elapsed_time = 4;
}

// 删除用户短链接的请求
message DeleteUserURLsRequest {
  string user_id = 1;
}

// 删除用户短链接的响应
message DeleteUserURLsResponse {
  int32 deleted_count = 1;  // 删除的短链接数量
}

service ShortlinkService {
  // 长链接 → 短链接
  rpc ShortenURL(ShortenRequest) returns (ShortenResponse);

  // 短链接 → 长链接
  rpc Redierect(ResolveRequest) returns (ResolveResponse);

  // 获取前N条热点link
  rpc GetTopLinks (TopRequest) returns (TopResponse);
  
  // 批量生成短链接
  rpc BatchShortenURLs (BatchShortenRequest) returns (BatchShortenResponse);

  // 删除用户的所有短链接
  rpc DeleteUserURLs (DeleteUserURLsRequest) returns (DeleteUserURLsResponse);
}
